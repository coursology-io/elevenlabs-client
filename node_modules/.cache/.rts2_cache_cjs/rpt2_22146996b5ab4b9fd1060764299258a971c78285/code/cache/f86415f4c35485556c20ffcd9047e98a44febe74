{"code":"import { rawAudioProcessor } from \"./rawAudioProcessor\";\nconst LIBSAMPLERATE_JS = \"https://cdn.jsdelivr.net/npm/@alexanderolsen/libsamplerate-js@2.1.2/dist/libsamplerate.worklet.js\";\nfunction isIosDevice() {\n    return ([\n        \"iPad Simulator\",\n        \"iPhone Simulator\",\n        \"iPod Simulator\",\n        \"iPad\",\n        \"iPhone\",\n        \"iPod\",\n    ].includes(navigator.platform) ||\n        // iPad on iOS 13 detection\n        (navigator.userAgent.includes(\"Mac\") && \"ontouchend\" in document));\n}\nexport class Input {\n    context;\n    analyser;\n    worklet;\n    inputStream;\n    static async create({ sampleRate, format, preferHeadphonesForIosDevices, }) {\n        let context = null;\n        let inputStream = null;\n        try {\n            const options = {\n                sampleRate: { ideal: sampleRate },\n                echoCancellation: { ideal: true },\n                noiseSuppression: { ideal: true },\n            };\n            // some browsers won't allow calling getSupportedConstraints or enumerateDevices\n            // before getting approval for microphone access\n            const preliminaryInputStream = await navigator.mediaDevices.getUserMedia({\n                audio: true,\n            });\n            preliminaryInputStream?.getTracks().forEach(track => track.stop());\n            if (isIosDevice() && preferHeadphonesForIosDevices) {\n                const availableDevices = await window.navigator.mediaDevices.enumerateDevices();\n                const idealDevice = availableDevices.find(d => \n                // cautious to include \"bluetooth\" in the search\n                // as might trigger bluetooth speakers\n                d.kind === \"audioinput\" &&\n                    [\"airpod\", \"headphone\", \"earphone\"].find(keyword => d.label.toLowerCase().includes(keyword)));\n                if (idealDevice) {\n                    options.deviceId = { ideal: idealDevice.deviceId };\n                }\n            }\n            const supportsSampleRateConstraint = navigator.mediaDevices.getSupportedConstraints().sampleRate;\n            context = new window.AudioContext(supportsSampleRateConstraint ? { sampleRate } : {});\n            const analyser = context.createAnalyser();\n            if (!supportsSampleRateConstraint) {\n                await context.audioWorklet.addModule(LIBSAMPLERATE_JS);\n            }\n            await context.audioWorklet.addModule(rawAudioProcessor);\n            inputStream = await navigator.mediaDevices.getUserMedia({\n                audio: options,\n            });\n            const source = context.createMediaStreamSource(inputStream);\n            const worklet = new AudioWorkletNode(context, \"raw-audio-processor\");\n            worklet.port.postMessage({ type: \"setFormat\", format, sampleRate });\n            source.connect(analyser);\n            analyser.connect(worklet);\n            return new Input(context, analyser, worklet, inputStream);\n        }\n        catch (error) {\n            inputStream?.getTracks().forEach(track => track.stop());\n            context?.close();\n            throw error;\n        }\n    }\n    constructor(context, analyser, worklet, inputStream) {\n        this.context = context;\n        this.analyser = analyser;\n        this.worklet = worklet;\n        this.inputStream = inputStream;\n    }\n    async close() {\n        this.inputStream.getTracks().forEach(track => track.stop());\n        await this.context.close();\n    }\n}\n//# sourceMappingURL=input.js.map","references":["/Users/aleksai/Desktop/ /projects/elevenlabs-client/src/utils/rawAudioProcessor.ts","/Users/aleksai/Desktop/ /projects/elevenlabs-client/src/utils/connection.ts"],"map":"{\"version\":3,\"file\":\"input.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/utils/input.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/aleksai/Desktop/ /projects/elevenlabs-client/dist/utils/input.d.ts","writeByteOrderMark":false,"text":"import { FormatConfig } from \"./connection\";\nexport type InputConfig = {\n    preferHeadphonesForIosDevices?: boolean;\n};\nexport declare class Input {\n    readonly context: AudioContext;\n    readonly analyser: AnalyserNode;\n    readonly worklet: AudioWorkletNode;\n    readonly inputStream: MediaStream;\n    static create({ sampleRate, format, preferHeadphonesForIosDevices, }: FormatConfig & InputConfig): Promise<Input>;\n    private constructor();\n    close(): Promise<void>;\n}\n"}}
