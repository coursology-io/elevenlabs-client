{"code":"import { audioConcatProcessor } from \"./audioConcatProcessor\";\nexport class Output {\n    context;\n    analyser;\n    gain;\n    worklet;\n    static async create({ sampleRate, format, }) {\n        let context = null;\n        try {\n            context = new AudioContext({ sampleRate });\n            const analyser = context.createAnalyser();\n            const gain = context.createGain();\n            gain.connect(analyser);\n            analyser.connect(context.destination);\n            await context.audioWorklet.addModule(audioConcatProcessor);\n            const worklet = new AudioWorkletNode(context, \"audio-concat-processor\");\n            worklet.port.postMessage({ type: \"setFormat\", format });\n            worklet.connect(gain);\n            return new Output(context, analyser, gain, worklet);\n        }\n        catch (error) {\n            context?.close();\n            throw error;\n        }\n    }\n    constructor(context, analyser, gain, worklet) {\n        this.context = context;\n        this.analyser = analyser;\n        this.gain = gain;\n        this.worklet = worklet;\n    }\n    async close() {\n        await this.context.close();\n    }\n}\n//# sourceMappingURL=output.js.map","references":["/Users/aleksai/Desktop/ /projects/elevenlabs-client/src/utils/audioConcatProcessor.ts","/Users/aleksai/Desktop/ /projects/elevenlabs-client/src/utils/connection.ts"],"map":"{\"version\":3,\"file\":\"output.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/utils/output.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,oBAAoB,EAAE,MAAM,wBAAwB,CAAC;AAG9D,MAAM,OAAO,MAAM;IAyBC;IACA;IACA;IACA;IA3BX,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EACzB,UAAU,EACV,MAAM,GACO;QACb,IAAI,OAAO,GAAwB,IAAI,CAAC;QACxC,IAAI,CAAC;YACH,OAAO,GAAG,IAAI,YAAY,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;YAC3C,MAAM,QAAQ,GAAG,OAAO,CAAC,cAAc,EAAE,CAAC;YAC1C,MAAM,IAAI,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;YAClC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACvB,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;YACtC,MAAM,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC;YAC3D,MAAM,OAAO,GAAG,IAAI,gBAAgB,CAAC,OAAO,EAAE,wBAAwB,CAAC,CAAC;YACxE,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,CAAC,CAAC;YACxD,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAEtB,OAAO,IAAI,MAAM,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QACtD,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,EAAE,KAAK,EAAE,CAAC;YACjB,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;IAED,YACkB,OAAqB,EACrB,QAAsB,EACtB,IAAc,EACd,OAAyB;QAHzB,YAAO,GAAP,OAAO,CAAc;QACrB,aAAQ,GAAR,QAAQ,CAAc;QACtB,SAAI,GAAJ,IAAI,CAAU;QACd,YAAO,GAAP,OAAO,CAAkB;IACxC,CAAC;IAEG,KAAK,CAAC,KAAK;QAChB,MAAM,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;IAC7B,CAAC;CACF\"}","dts":{"name":"/Users/aleksai/Desktop/ /projects/elevenlabs-client/dist/utils/output.d.ts","writeByteOrderMark":false,"text":"import { FormatConfig } from \"./connection\";\nexport declare class Output {\n    readonly context: AudioContext;\n    readonly analyser: AnalyserNode;\n    readonly gain: GainNode;\n    readonly worklet: AudioWorkletNode;\n    static create({ sampleRate, format, }: FormatConfig): Promise<Output>;\n    private constructor();\n    close(): Promise<void>;\n}\n"}}
